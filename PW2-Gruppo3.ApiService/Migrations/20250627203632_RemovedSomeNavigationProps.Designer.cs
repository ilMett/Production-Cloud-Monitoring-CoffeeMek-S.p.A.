// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PW2_Gruppo3.ApiService.Data;

#nullable disable

namespace PW2Gruppo3.ApiService.Migrations
{
    [DbContext(typeof(ProductionMonitoringContext))]
    [Migration("20250627203632_RemovedSomeNavigationProps")]
    partial class RemovedSomeNavigationProps
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PW2_Gruppo3.Models.AssemblyLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AverageStationTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("BatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BlockageCause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Faults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFirst")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLast")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastMaintenance")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MachineBlockage")
                        .HasColumnType("bit");

                    b.Property<Guid>("MachineryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OperatorsNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("SiteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TimestampLocal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimestampUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BatchId");

                    b.ToTable("AssemblyLines", (string)null);
                });

            modelBuilder.Entity("PW2_Gruppo3.Models.Batch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ItemProduced")
                        .HasColumnType("int");

                    b.Property<int>("ItemQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("SiteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isCompleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SiteId");

                    b.ToTable("Batches", (string)null);
                });

            modelBuilder.Entity("PW2_Gruppo3.Models.BatchQueueItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BatchUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Position");

                    b.ToTable("BatchQueueItems");
                });

            modelBuilder.Entity("PW2_Gruppo3.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VatCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("PW2_Gruppo3.Models.Lathe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BlockageCause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompletedItemsQuantity")
                        .HasColumnType("int");

                    b.Property<bool>("IsFirst")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLast")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastMaintenance")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MachineBlockage")
                        .HasColumnType("bit");

                    b.Property<string>("MachineState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MachineryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rpm")
                        .HasColumnType("int");

                    b.Property<Guid>("SiteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("SpindleTemperature")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<DateTime>("TimestampLocal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimestampUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BatchId");

                    b.ToTable("Lathes");
                });

            modelBuilder.Entity("PW2_Gruppo3.Models.Milling", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BlockageCause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompletedItemsQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("CuttingDepth")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal>("CycleDuration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsFirst")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLast")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastMaintenance")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MachineBlockage")
                        .HasColumnType("bit");

                    b.Property<Guid>("MachineryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SiteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TimestampLocal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimestampUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserAlerts")
                        .HasColumnType("int");

                    b.Property<decimal>("Vibration")
                        .HasColumnType("decimal(18, 4)");

                    b.HasKey("Id");

                    b.HasIndex("BatchId");

                    b.ToTable("Millings");
                });

            modelBuilder.Entity("PW2_Gruppo3.Models.Site", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("PW2_Gruppo3.Models.TestLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BlockageCause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BoilerPressure")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal>("BoilerTemperature")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal>("EnergyConsumption")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<bool>("IsFirst")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLast")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastMaintenance")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MachineBlockage")
                        .HasColumnType("bit");

                    b.Property<Guid>("MachineryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SiteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TestResult")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TimestampLocal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimestampUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BatchId");

                    b.ToTable("TestLines");
                });

            modelBuilder.Entity("PW2_Gruppo3.Models.AssemblyLine", b =>
                {
                    b.HasOne("PW2_Gruppo3.Models.Batch", "Batch")
                        .WithMany("AssemblyLines")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");
                });

            modelBuilder.Entity("PW2_Gruppo3.Models.Batch", b =>
                {
                    b.HasOne("PW2_Gruppo3.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PW2_Gruppo3.Models.Site", "Site")
                        .WithMany("Batches")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("PW2_Gruppo3.Models.Lathe", b =>
                {
                    b.HasOne("PW2_Gruppo3.Models.Batch", "Batch")
                        .WithMany("Lathes")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");
                });

            modelBuilder.Entity("PW2_Gruppo3.Models.Milling", b =>
                {
                    b.HasOne("PW2_Gruppo3.Models.Batch", "Batch")
                        .WithMany("Millings")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");
                });

            modelBuilder.Entity("PW2_Gruppo3.Models.TestLine", b =>
                {
                    b.HasOne("PW2_Gruppo3.Models.Batch", "Batch")
                        .WithMany("TestLines")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");
                });

            modelBuilder.Entity("PW2_Gruppo3.Models.Batch", b =>
                {
                    b.Navigation("AssemblyLines");

                    b.Navigation("Lathes");

                    b.Navigation("Millings");

                    b.Navigation("TestLines");
                });

            modelBuilder.Entity("PW2_Gruppo3.Models.Site", b =>
                {
                    b.Navigation("Batches");
                });
#pragma warning restore 612, 618
        }
    }
}
